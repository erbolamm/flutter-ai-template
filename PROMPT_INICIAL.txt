INSTRUCCIONES DE CONFIGURACI√ìN INICIAL PARA IA/COPILOT
--------------------------------------------

¬°Hola! He integrado una plantilla universal de Flutter en mi proyecto. Por favor, config√∫rate seg√∫n estas instrucciones:

üéØ OBJETIVO DEL PROYECTO
------------------------
[PERSONALIZAR AQU√ç] Describe brevemente el prop√≥sito principal de tu aplicaci√≥n Flutter. Ejemplo:
- "Esta es una aplicaci√≥n de gesti√≥n de tareas con sincronizaci√≥n en la nube"
- "Es un e-commerce para productos artesanales con pagos integrados"
- "Aplicaci√≥n educativa para aprender idiomas con gamificaci√≥n"

üìã REGLAS DE C√ìDIGO OBLIGATORIAS
-------------------------------
1. **Logging**: SIEMPRE usa `logger` - NUNCA `print()`
   - Ejemplo: `final logger = Logger(); logger.d('Mensaje');`

2. **Idioma**: Todo el c√≥digo, comentarios y documentaci√≥n en ESPA√ëOL

3. **Estilo**: Sigue effective_dart
   - Variables/funciones: `camelCase`
   - Clases: `PascalCase`
   - Archivos: `snake_case`
√•
4. **Arquitectura**: Aplica principios S.O.L.I.D.
   - Explica qu√© principio aplicaste cuando refactorices
   - Prefiere objetos inmutables

üõ†Ô∏è DEPENDENCIAS DEL PROYECTO
----------------------------
Consulta siempre `pubspec.yaml` para las dependencias exactas. NO asumas versiones.

Dependencias obligatorias m√≠nimas:
- `logger` (logging obligatorio)
- `get_it` (inyecci√≥n de dependencias)
- `provider` (manejo de estado)

üèóÔ∏è ARQUITECTURA RECOMENDADA
---------------------------
Estructura de Clean Architecture:
- `lib/presentation/` - UI, widgets, p√°ginas
- `lib/domain/` - Casos de uso, entidades, contratos
- `lib/data/` - Implementaciones de repositorios
- `lib/core/` - Servicios transversales (DI, logging, utils)

üìù PROCESO DE TRABAJO
--------------------
1. **An√°lisis cr√≠tico**: S√© esc√©ptico, cuestiona suposiciones
2. **Verificaci√≥n**: Antes de crear c√≥digo, verifica si ya existe
3. **Explicaci√≥n**: Presenta plan de acci√≥n antes de ejecutar tareas complejas
4. **Confirmaci√≥n**: Usa escala 1-3 para verificar comprensi√≥n
   - 1: Confundido
   - 2: M√°s o menos  
   - 3: Entendido (solo avanza con 3)

üöÄ SERVIDOR MCP (OPCIONAL)
-------------------------
Si necesitas capacidades avanzadas (an√°lisis global, m√©tricas, refactors amplios):

1. Verificar: `curl http://localhost:3000/health`
2. Si falla, iniciar: `./tools/scripts/start_mcp.sh`
3. Usar endpoints MCP para tareas complejas

‚ö†Ô∏è RESTRICCIONES
----------------
- NO uses Firebase directamente desde Widgets
- NO uses `print()` jam√°s
- NO agregues dependencias sin verificar `pubspec.yaml`
- NO hagas m√°s de una pregunta por mensaje

‚úÖ VERIFICACI√ìN ANTES DE EMPEZAR
-------------------------------
Confirma que entiendes estas reglas respondiendo:
"Entendido. Configuraci√≥n aplicada para proyecto Flutter con [DESCRIBE TU OBJETIVO]. Listo para trabajar siguiendo principios S.O.L.I.D., usando logger y arquitectura Clean."

Despu√©s de esa confirmaci√≥n, puedes empezar a trabajar normalmente.

--------------------------------------------==
ARCHIVO GENERADO POR: Plantilla Universal Flutter
VERSI√ìN: 1.0
UBICACI√ìN: Copia este texto al chat y luego BORRA este archivo
--------------------------------------------==
